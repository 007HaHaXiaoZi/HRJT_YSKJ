{"version":3,"file":"components/xr-ar-golden-egg/index.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA","sources":["webpack://auditorium/._src_components_xr-ar-golden-egg_index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport shareBehavior from \"../common/share-behavior\";\nimport { MARKER_IMAGEEGG } from \"../../constants\";\n\n// eslint-disable-next-line no-undef\nComponent({\n  behaviors: [shareBehavior],\n  properties: {},\n  data: {\n    loaded: false,\n    arReady: false,\n    markerMatch: false,\n  },\n  lifetimes: {\n    attached() {\n      this.executed = false;\n    },\n  },\n  methods: {\n    handleReady({ detail }) {\n      const xrScene = (this.scene = detail.value);\n      this.mat = new (wx.getXrFrameSystem().Matrix4)();\n      console.log(\"xr-scene\", xrScene);\n    },\n\n    handleAssetsLoaded: function () {\n      this.setData({ loaded: true });\n    },\n    handleARReady: function () {\n      const xr = wx.getXrFrameSystem();\n\n      // shadow root\n      this.root = this.scene.getElementById(\"root\");\n\n      // 动态创建添加tracker\n      const lockTrackerEl = this.scene.createElement(xr.XRNode);\n      lockTrackerEl.addComponent(xr.ARTracker, {\n        mode: \"Marker\",\n        src: MARKER_IMAGEEGG,\n      });\n\n      this.root.addChild(lockTrackerEl);\n\n      let waiting = false;\n\n      lockTrackerEl.event.add(\"ar-tracker-state\", (tracker) => {\n        // 获取当前状态和错误信息\n        const {\n          state,\n          // errorMessage\n        } = tracker;\n\n        if (state === 2 && !waiting) {\n          waiting = true;\n          // 识别成功后切换到世界坐标\n\n          // 延时保证坐标已经设置\n          setTimeout(() => {\n            this.setData({\n              markerMatch: true,\n            });\n\n            // 去除tracker监听\n            this.root.removeChild(lockTrackerEl);\n\n            this.scene.event.addOnce(\"touchstart\", this.placeNode.bind(this));\n\n            // toast\n            wx.showToast({\n              title: \"识别成功,  请扫描平面放置金蛋!\",\n              duration: 2000,\n            });\n          }, 30);\n        }\n      });\n    },\n    placeNode(event) {\n      const { clientX, clientY } = event.touches[0];\n      const { frameWidth: width, frameHeight: height } = this.scene;\n\n      if (clientY / height > 0.8 && clientX / width < 0.2) {\n        this.scene.getNodeById(\"setitem\").visible = false;\n        this.scene.ar.resetPlane();\n      } else {\n        this.scene.ar.placeHere(\"setitem\", true);\n        this.setData({\n          markerMatch: false,\n        });\n      }\n    },\n    // 点击模型, 只执行一次\n    handleTouchModel({ detail }) {\n      if (this.executed) return;\n      this.executed = true;\n\n      const el = detail.value.target;\n      const animator = el.getComponent(\"animator\");\n      animator.play(\"All Animations\", {\n        speed: 0.5,\n        loop: 0,\n        direction: \"forwards\",\n      });\n\n      // 延迟2s后, 显示结果\n      setTimeout(() => {\n        // 动画放结束, 隐藏模型\n        this.scene.getNodeById(\"setitem\").visible = false;\n        this.triggerEvent(\n          \"syncWiningStatus\",\n          Math.random() > 0.5 ? true : false\n        );\n      }, 2000);\n    },\n  },\n});\n"],"names":[],"sourceRoot":""}